
set-option -g		prefix C-a

# Windows and panes numbering.
set-option -g		base-index 1
set-option -g		pane-base-index 1
set-option -g		renumber-windows on

set-option -g		repeat-time 200

set-option -g		display-time 2500
set-option -g		history-limit 10000

set-window-option -g	mode-keys vi

# taskwarrior colors works even with TERM=screen. The only requirment is
# TERM=xterm-256color in xterm, where i launch tmux. So for now leave this
# commented.
#set-option -g		default-terminal "screen-256color"

# Colors.
set-option -g		status-bg white
set-option -g		message-bg white
set-option -g		message-command-bg white
set-option -g		pane-active-border-fg cyan
set-option -g		pane-border-fg magenta
set-option -g		display-panes-active-colour cyan
set-option -g		display-panes-colour magenta
set-window-option -g	mode-bg white

# Mouse settings. Scroll will work in terminal apps only, if all is disabled.
set-option -g		mouse-select-pane on
set-option -g		mouse-select-window on
set-option -g		mouse-resize-pane off
set-window-option -g	mode-mouse on

# Create delete and swap sessions, windows and panes (xmonad style).
bind-key		N	new-session
bind-key		n	new-window
bind-key -r		s   	split-window -v
bind-key -r  		v   	split-window -h
# Kill current session, and select next one.
# Command from Chris Johnsen's answer at unix.stackexchange "Kill a tmux
# session and select another tmux session" (http://unix.stackexchange.com/questions/58588/kill-a-tmux-session-and-select-another-tmux-session)
# This hack relies on fact, that "default" client (for `switch-client -n`) and
# "default" session (for #S in `display-message -p`) are last active ones. If
# during execution of this shell command, any other tmux client will receive
# _any_ input, it'll become "default" and command will fail. Though, this
# command should run from shell, because after killing current session from
# inside tmux, no other commands may be executed (client detached). If i
# switch first, i have no way to determine the name of previous session (i
# think).
# Note, that i execute `switch-client` and `kill-session` in different _shell_
# commands, because otherwise, if this is the last session and `switch-client`
# failes, `kill-session` will not be executed at all.
bind-key		C   	confirm-before -p "kill-session #S? (y/n)" \
				    'run-shell \
					"s=\"\$(tmux display-message -p \"#S\")\"; \
					 tmux switch-client -n; \
					 tmux kill-session -t \"\$s\""'
bind-key		c   	confirm-before -p "kill-window #W? (y/n)" kill-window
bind-key		x   	confirm-before -p "kill-pane #P? (y/n)" kill-pane
bind-key -r		L   	swap-window -t '+1'
bind-key -r		H   	swap-window -t '-1'
bind-key -r		K   	swap-pane -U
bind-key -r		J   	swap-pane -D
bind-key		q   	display-panes

# Resize panes (vim style).
bind-key -r		+   	resize-pane -U
bind-key -r		-   	resize-pane -D
bind-key -r		>   	resize-pane -R
bind-key -r		<   	resize-pane -L

# Select sessions (vim-style).
bind-key		d	detach-client
bind-key -r		t	switch-client -n
bind-key -r		T	switch-client -p
# FIXME: May be use r without -I and R with '-I "#S"', like in pentadactyl?
# But then, what will be rename key for windows?
bind-key		R	command-prompt "rename-session '%%'"
bind-key		B	command-prompt "attach-session -t '%%'"

# Select windows (xmonad style).
bind-key -r		l	next-window
bind-key -r		h	previous-window
bind-key		r	command-prompt "rename-window '%%'"
bind-key		b	command-prompt "select-window -t ':%%'"
bind-key		'!' 	select-window -t :1
bind-key		'@' 	select-window -t :2
bind-key		'#' 	select-window -t :3
bind-key		'$' 	select-window -t :4
bind-key		'%' 	select-window -t :5
bind-key		'^' 	select-window -t :6
bind-key		'&' 	select-window -t :7
bind-key		'*' 	select-window -t :8
bind-key		'(' 	select-window -t :9

# Select panes (xmonad style).
bind-key -r		Space	next-layout
bind-key -r		j   	select-pane -t .+
bind-key -r		k   	select-pane -t .-
bind-key		1   	select-pane -t .1
bind-key		2   	select-pane -t .2
bind-key		3   	select-pane -t .3
bind-key		4   	select-pane -t .4
bind-key		5   	select-pane -t .5
bind-key		6   	select-pane -t .6
bind-key		7   	select-pane -t .7
bind-key		8   	select-pane -t .8
bind-key		9   	select-pane -t .9

# Copy-paste.
bind-key -t vi-copy	v	begin-selection
bind-key -t vi-copy	y   	copy-selection
bind-key		p	paste-buffer -s 
bind-key		C-c	run-shell -b \
				    'tmux save-buffer - \
					| xclip -i -selection primary'
bind-key		C-v	run-shell \
				    'tmux set-buffer -- "$(xclip -o -selection primary)"; \
				     tmux paste-buffer'

# Redraw client (vim style).
bind-key		C-l	refresh-client
bind-key		o	command-prompt -I "$PWD/var/" "source-file '%%'"

